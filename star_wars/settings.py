"""
Django settings for star_wars project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys
# Hack for running app directly.
sys.path.insert(0, os.path.abspath('..'))
# Hack for tests.
sys.path.insert(0, os.path.abspath('.'))
from os import  path

from dotenv import load_dotenv, find_dotenv
load_dotenv(find_dotenv())

import django_heroku

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g9)pt*oo_6=ku&3^1vd#2cnhao%=h53(vn@-8-0^ld8*8bbsl%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
import dj_database_url

def rel_path(*subpaths):
    """Construct the full path given a relative path."""
    return path.join(BASE_DIR, *subpaths)
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'crispy_forms',
    'rest_framework.authtoken',
    'djongo',
    'coverage',
    'django_nose',
    'django_filters',
    'star_wars_api'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'star_wars.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'star_wars.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': os.getenv("DATABASE_NAME"),
        'port': 27017,
        'host': os.getenv("DATABASE_HOST"),
        'username': os.getenv("DATABASE_USERNAME"),
        'password': os.getenv("DATABASE_PASSWORD")
    },

}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS':
    'star_wars_api.configurations.pagination.LimitOffsetPaginationWithMaxLimit',
    'PAGE_SIZE': 5,
    'DEFAULT_THROTTLE_CLASSES': (
            'rest_framework.throttling.AnonRateThrottle',
            'rest_framework.throttling.UserRateThrottle',
        ),
        'DEFAULT_THROTTLE_RATES': {
            'anon': '50/hour',
            'user': '50/hour',
        }
}

AUTH_USER_MODEL = 'star_wars_api.UserProfile'

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

# We want nose to measure coverage on the games app
NOSE_ARGS = [
    '--with-coverage',
    '--cover-erase',
    '--cover-inclusive',
    '--cover-package=star_wars_api',
]



if os.getenv("CI_TEST") == "TRUE":
    DATABASES = {
    'default':
        dj_database_url.config(
            default='sqlite:///' + rel_path('testapp.sqlite3'))
}

STATIC_URL = '/static/'

django_heroku.settings(locals())